On 20090401, Ted Jordan writes:
 The generated libtool for building libstdc++ adds the -nostdlib option to the
 g++ command for linking but doesn't add -lgcc.  This causes a "hidden symbol"
 error when linking against the libstdc++ shared object.  This patch adds gcc
 to the list of libraries linked against when linking libstdc++.

Index: gcc-4.2.1/ltcf-cxx.sh
===================================================================
--- gcc-4.2.1.orig/ltcf-cxx.sh	2005-07-15 21:30:53.000000000 -0500
+++ gcc-4.2.1/ltcf-cxx.sh	2009-04-02 09:30:34.000000000 -0500
@@ -78,8 +78,8 @@
   # to be the same.
 
   if test "$with_gnu_ld" = yes; then
-    archive_cmds='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'
-    archive_expsym_cmds='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+    archive_cmds='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -lgcc ${wl}-soname $wl$soname -o $lib'
+    archive_expsym_cmds='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -lgcc ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
 
     hardcode_libdir_flag_spec='${wl}--rpath ${wl}$libdir'
     export_dynamic_flag_spec='${wl}--export-dynamic'
